name: Github actions with maven build and deploy
on:
 push:
   branches:
   - main
jobs:
 Do-the-travis-thing:
   runs-on: ubuntu-20.04 #or ubuntu-latest
   # services:
   #   mysql:
   #     image: mysql:8.0
   #     env:
   #       DB_DATABASE: startcode_test
   #       DB_USER: dev
   #       DB_PASSWORD: ax2
   steps:
     - name: checkout
       uses: actions/checkout@v2
     - name: setup jdk 11
       uses: actions/setup-java@v2
       with:
         java-version: '11'
         distribution: 'adopt' # openjdk see the setup java action:     
     - name: mysql
       uses: mirromutth/mysql-action@v1.1
       with:
                  # character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
         # collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
         mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
         mysql database: 'startcode_test' # Optional, default value is "test". The specified database which will be create
         # mysql root password: ${{ secrets.RootPassword }} # Required if "mysql user" is empty, default is empty. The root superuser password
         mysql user: 'dev' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
         # mysql password: ${{ secrets.DatabasePassword }} # Required if "mysql user" exists. The password for the "mysql user"
         mysql password: 'ax2'
     - name: Cache Maven packages # cache maven repos to save time on future builds
       uses: actions/cache@v2
       with:
         path: ~/.m2
         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
         restore-keys: ${{ runner.os }}-m2 # the action searches for partial matches of the restore keys. When the action finds a partial match, the most recent cache is restored to the path directory.
     - name: Maven verify
       run: mvn test -X
     - name: Maven deploy
       run: mvn -Dremote.user=${{ secrets.REMOTE_USER }} -Dremote.password=${{ secrets.REMOTE_PW }} tomcat7:deploy
